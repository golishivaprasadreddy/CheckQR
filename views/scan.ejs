<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QR Code Scanner with Local Storage</title>

    <!-- Required Libraries -->
    <script src="https://unpkg.com/html5-qrcode"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.71/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.71/vfs_fonts.js"></script>
</head>

<body class="bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 flex flex-col items-center justify-center min-h-screen p-6">

    <div class="bg-white shadow-lg rounded-lg p-6 w-full max-w-2xl text-center">
        <h1 class="text-3xl font-bold text-gray-800 mb-4">üì∏ QR Code Scanner</h1>

        <!-- Scanner Box -->
        <div id="reader" class="w-4/5  justify-self-center border-2 border-gray-300 rounded-lg p-4 shadow-sm "></div>
 
        <!-- Scan Counter -->
        <div class="mt-4 text-gray-700 font-semibold text-lg">
            <span>üîç Scanned Entries: </span><span id="scan-count" class="text-blue-600">0</span>
        </div>

        <!-- Scanned Data Table -->
        <div id="result-container" class="hidden mt-6">
            <h2 class="text-xl font-semibold text-gray-700 mb-3">Scanned Data</h2>

            <div class="overflow-x-auto">
                <table class="w-full border-collapse border border-gray-300 shadow-sm rounded-lg">
                    <thead class="bg-blue-600 text-white">
                        <tr>
                            <th class="border border-gray-300 px-3 py-2">Roll No</th>
                            <th class="border border-gray-300 px-3 py-2">Name</th>
                            <th class="border border-gray-300 px-3 py-2">Year & Semester</th>
                            <th class="border border-gray-300 px-3 py-2">Department</th>
                            <th class="border border-gray-300 px-3 py-2">WhatsApp</th>
                            <th class="border border-gray-300 px-3 py-2">Email</th>
                        </tr>
                    </thead>
                    <tbody id="result-table" class="bg-gray-50 text-gray-800"></tbody>
                </table>
            </div>

            <!-- Action Buttons -->
            <div class="mt-5 flex flex-wrap justify-center gap-4">
                <button onclick="downloadExcel()" class="bg-green-600 text-white px-5 py-2 rounded-lg shadow-md hover:bg-green-700 transition">
                    üì• Download Excel
                </button>
                <button onclick="downloadPDF()" class="bg-red-600 text-white px-5 py-2 rounded-lg shadow-md hover:bg-red-700 transition">
                    üìÑ Download PDF
                </button>
                <button onclick="clearData()" class="bg-gray-600 text-white px-5 py-2 rounded-lg shadow-md hover:bg-gray-700 transition">
                    üóëÔ∏è Clear Data
                </button>
            </div>
        </div>
    </div>
    
    <!-- Footer -->
    <footer class="mt-8 text-center text-white text-lg font-semibold">
        Developed by <span class="font-bold">GOLI SHIVAPRASAD REDDY</span> ‚ù§Ô∏è
   </footer>

    <audio id="scanSound">
        <source src="https://www.fesliyanstudios.com/play-mp3/4386" type="audio/mpeg">
    </audio>

    <script>
        let scannedData = new Set();

        function onScanSuccess(decodedText) {
            let sound = document.getElementById("scanSound");
            sound.play();
            setTimeout(() => sound.pause(), 50); // Stop after

            if (scannedData.has(decodedText)) return;
            scannedData.add(decodedText);

            let data = parseScannedData(decodedText);
            if (data) {
                saveToLocalStorage(data);
                renderTable();
            }
        }

        function parseScannedData(text) {
            let lines = text.split("\n");
            let data = {};

            lines.forEach(line => {
                let parts = line.split(": ");
                if (parts.length === 2) {
                    let key = parts[0].trim().toLowerCase();
                    let value = parts[1].trim();

                    if (key.includes("roll no")) data.rollNo = value;
                    else if (key.includes("name")) data.name = value;
                    else if (key.includes("year")) data.yearSemester = value;
                    else if (key.includes("department")) data.department = value;
                    else if (key.includes("whatsapp") || key.includes("phone")) data.whatsapp = value;
                    else if (key.includes("email") || key.includes("mail")) data.email = value;
                }
            });

            return data.rollNo ? data : null;
        }

        function saveToLocalStorage(data) {
            let storedData = JSON.parse(localStorage.getItem("scannedData")) || [];
            storedData.push(data);
            localStorage.setItem("scannedData", JSON.stringify(storedData));
        }

        function renderTable() {
            let storedData = JSON.parse(localStorage.getItem("scannedData")) || [];
            let tableBody = document.getElementById("result-table");
            let resultContainer = document.getElementById("result-container");
            let scanCount = document.getElementById("scan-count");

            tableBody.innerHTML = "";
            storedData.forEach((data) => {
                let newRow = `<tr class="border-b border-gray-300 bg-white hover:bg-gray-100">
                    <td class="border border-gray-300 px-3 py-2">${data.rollNo}</td>
                    <td class="border border-gray-300 px-3 py-2">${data.name}</td>
                    <td class="border border-gray-300 px-3 py-2">${data.yearSemester}</td>
                    <td class="border border-gray-300 px-3 py-2">${data.department}</td>
                    <td class="border border-gray-300 px-3 py-2">${data.whatsapp}</td>
                    <td class="border border-gray-300 px-3 py-2">${data.email}</td>
                </tr>`;
                tableBody.insertAdjacentHTML("afterbegin", newRow);
                // tableBody.insertAdjacentHTML("beforeend", newRow);
            });

            scanCount.innerText = storedData.length;
            if (storedData.length > 0) {
                resultContainer.classList.remove("hidden");
            }
        }

        function downloadExcel() {
            let storedData = JSON.parse(localStorage.getItem("scannedData")) || [];
            if (storedData.length === 0) return alert("No data to download.");

            let ws = XLSX.utils.json_to_sheet(storedData);
            let wb = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(wb, ws, "Scanned Data");

            XLSX.writeFile(wb, "Scanned_Details.xlsx");
        }

        function downloadPDF() {
            let storedData = JSON.parse(localStorage.getItem("scannedData")) || [];
            if (storedData.length === 0) return alert("No data to download.");

            let body = [["Roll No", "Name", "Year & Semester", "Department", "WhatsApp", "Email"]];
            storedData.forEach((data) => {
                body.push([data.rollNo, data.name, data.yearSemester, data.department, data.whatsapp, data.email]);
            });

            let docDefinition = {
                content: [
                    { text: "Scanned Data", style: "header" },
                    { table: { headerRows: 1, body } }
                ],
                footer: (currentPage, pageCount) => ({ text: `Page ${currentPage} of ${pageCount}`, alignment: 'center' }),
                styles: { header: { fontSize: 18, bold: true, margin: [0, 0, 0, 10] } }
            };

            pdfMake.createPdf(docDefinition).download("Scanned_Details.pdf");
        }

        function clearData() {
            localStorage.removeItem("scannedData");
            document.getElementById("result-table").innerHTML = "";
            document.getElementById("result-container").classList.add("hidden");
            document.getElementById("scan-count").innerText = "0";
        }

        let scanner = new Html5QrcodeScanner("reader", { fps: 10, qrbox: 250 });
        scanner.render(onScanSuccess);
        renderTable();
    </script>
</body>
</html>
